### YamlMime:UniversalReference
items:
  - uid: azure-iot-device.Twin
    name: Twin
    fullName: Twin
    children:
      - azure-iot-device.Twin.desiredPath
      - azure-iot-device.Twin.desiredPropertiesUpdatesEnabled
      - azure-iot-device.Twin.errorEvent
      - azure-iot-device.Twin.get
      - azure-iot-device.Twin.properties
    langs:
      - typeScript
    type: class
    summary: >+
      A Device Twin is document describing the state of a device that is stored
      by an Azure IoT hub and is available even if the device is offline.

      It is built around 3 sections:
        - Tags: key/value pairs only accessible from the service side
        - Desired Properties: updated by a service and received by the device
        - Reported Properties: updated by the device and received by the service.
      Note that although it is a possibility, desired and reported properties do
      not have to match

      and that the logic to sync these two collections, if necessary, is left to
      the user of the SDK.


      For more information see [Understanding Device
      Twins](https://docs.microsoft.com/en-us/azure/iot-hub/iot-hub-devguide-device-twins).

       @fires Twin#properties.desired[.path]

    extends:
      name: any
    package: azure-iot-device
  - uid: azure-iot-device.Twin.desiredPath
    name: desiredPath
    fullName: desiredPath
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static desiredPath: string = "properties.desired"'
      return:
        type:
          - string
    package: azure-iot-device
  - uid: azure-iot-device.Twin.desiredPropertiesUpdatesEnabled
    name: desiredPropertiesUpdatesEnabled
    fullName: desiredPropertiesUpdatesEnabled
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'desiredPropertiesUpdatesEnabled: boolean'
      return:
        type:
          - boolean
    package: azure-iot-device
  - uid: azure-iot-device.Twin.errorEvent
    name: errorEvent
    fullName: errorEvent
    children: []
    langs:
      - typeScript
    type: property
    summary: ''
    syntax:
      content: 'static errorEvent: string = "error"'
      return:
        type:
          - string
    package: azure-iot-device
  - uid: azure-iot-device.Twin.get
    name: get
    children: []
    type: method
    langs:
      - typeScript
    summary: Gets the whole twin from the service.
    syntax:
      content: 'function get(callback?: Callback<Twin>)'
      parameters:
        - id: callback
          type:
            - Callback<azure-iot-device.Twin>
          description: ''
          optional: true
      return:
        type:
          - Promise<azure-iot-device.Twin> | void
    package: azure-iot-device
  - uid: azure-iot-device.Twin.properties
    name: properties
    fullName: properties
    children: []
    langs:
      - typeScript
    type: property
    summary: >-
      The desired and reported properties dictionaries (respectively in
      `properties.desired` and `properties.reported`).
    syntax:
      content: 'properties: TwinProperties'
      return:
        type:
          - azure-iot-device.TwinProperties
    package: azure-iot-device
references:
  - uid: azure-iot-device.TwinProperties
    name: TwinProperties
    spec.typeScript:
      - name: TwinProperties
        fullName: TwinProperties
        uid: azure-iot-device.TwinProperties
  - uid: Callback<azure-iot-device.Twin>
    name: Twin>
    spec.typeScript:
      - name: Callback<
        fullName: Callback<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '>'
        fullName: '>'
  - uid: Promise<azure-iot-device.Twin> | void
    name: Twin> | void
    spec.typeScript:
      - name: Promise<
        fullName: Promise<
      - name: Twin
        fullName: Twin
        uid: azure-iot-device.Twin
      - name: '> | void'
        fullName: '> | void'
